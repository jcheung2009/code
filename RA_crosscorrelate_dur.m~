function [c lags shuffc] = RA_crosscorrelate_dur(batchfile,seqlen,minsampsize,...
    activitythresh,timewin,plotfig,singleunits);
%finds burst at different time lags relative to target syll and computes
%correlation
%seqlen = length of syllable sequence, target syll is middle (use 5)
%minsampsize = minimum number of trials
%activitythresh = for peak detection (zsc relative to shuffled)
%timewin = [min max], min and max time in ms relative to target syll onset
%plotfit = 1 or 0, plot peak detection for troubleshooting
%singleunits = 1 or 0, restrict to single units if 1 or multiunit for 0
%(both have to pass activity thresh)
%mode = 'burst' for restricting analysis to bursts and detectinb burst borders,'spikes' for counting
%any spikes in a set 40 ms window

%parameters
config;
win = gausswin(20);%for smoothing spike trains
win = win./sum(win);
shift = 20;%ms
motorwin = 40;%for spikes mode
shufftrials = 1000;
lags = [timewin(1):shift:timewin(2)];
c = cell(length(lags),1);
shuffc = cell(length(lags),1);

ff = load_batchf('batchfile');
for i = 1:length(ff)
    load(ff(i).name);
    spiketimes = spiketimes*1000;%ms
    
    %unique gap id
    gapids = find_uniquelbls(labels,seqlen,minsampsize);
    
    %for each unique sequence found  
    durs_all = offsets-onsets;
    for n = 1:length(gapids)
        
        %remove outliers
        idx = strfind(labels,gapids(n));
        seqons = onsets(bsxfun(@plus, idx',(0:seqlen-1)));%realtime 
        seqoffs = offsets(bsxfun(@plus,idx',(0:seqlen-1)));
        dur_id = jc_removeoutliers(durs_all(idx+ceil(seqlen/2)-1),3);
        dur_id = jc_removeoutliers(dur_id,3);
        id = find(isnan(dur_id));dur_id(id) = [];seqons(id,:) = [];seqoffs(id,:)=[];
        
        if ~isempty(find(seqoffs(:,end)-seqons(:,1)>=1000))
            id = find(seqoffs(:,end)-seqons(:,1)>=1000);
            seqons(id,:) = [];seqoffs(id,:) = [];dur_id(id) = [];
        end
        if length(dur_id)<25
            continue
        end
        
        anchor = seqons(m,ceil(seqlen/2));%syll onset 
        
        if strcmp(mode,'burst')
            %align spike times by landmarks (each onset/offset in sequence)
            landmarks = seqoffs(:,[1;1]*(1:size(seqoffs,2)));
            landmarks(:,1:2:end) = seqons;  
            bounds = mean(diff(landmarks,1,2));
            for pt = 2:size(landmarks,2)
                anchorpt = landmarks(:,pt);
                bound = bounds(pt-1);
                seqst2 = ceil(max(anchorpt-seqons(:,1)));
                seqend2 = ceil(max(seqoffs(:,end)-anchorpt));
                [PSTH_mn tb smooth_spiketrains spktms] = smoothtrain(spiketimes,...
                    seqst2,seqend2,anchorpt,win);
                
                %shuffled spike train to detect peaks that are significantly
                %above shuffled activity
                smooth_spiketrains_rand = permute_rowel(smooth_spiketrains);
                PSTH_mn_rand = mean(smooth_spiketrains_rand,1).*1000;
                
                %find peaks/bursts in PSTH
                [pks, locs, w,~,wc] = findpeaks2(PSTH_mn,'MinPeakProminence',10,...
                    'MinPeakWidth',10,'Annotate','extents','WidthReference','halfheight');
                wc = round(wc);
                pkid = find(tb(locs)>=-bound & tb(locs)<0);
                if isempty(pkid)
                    continue
                end

                %for each burst found
                for ixx = 1:length(pkid)
                    pkactivity = (pks(pkid(ixx))-mean(PSTH_mn_rand))/std(PSTH_mn_rand);

                    if singleunits==0
                        if mean(pct_error)<=0.01 | pkactivity < activitythresh
                            continue
                        end
                    else
                        if mean(pct_error) > 0.01 | pkactivity < activitythresh
                            continue
                        end
                    end
                        
                    [burstst burstend] = peakborder(wc,pkid(ixx),locs,tb);
                    npks_burst = cellfun(@(x) length(find(x>=tb(burstst)&x<tb(burstend))),spktms);
                    [r p] = corrcoef(npks_burst,dur_id);
                   
                    [r2 p2] = corrcoef([npks_burst_shuff',dur_id]);
                    r2 = r2(1:end-1,end);
                    p2 = p2(1:end-1,end);
                        
                        lagind = max(find(mean(anchorpt)+tb(locs(pkid(ixx)))-lags>0));
                        if isempty(lagind)
                            continue
                        else
                            c{lagind} = [c{lagind}; r(2) p(2)];
                            shuffc{lagind} = [shuffc{lagind} r2 p2];
                        end
                        
                        if plotfig==1
                            figure;subplot(2,1,1);hold on;cnt=0;
                            for m = 1:length(dur_id)
                                if isempty(spktms_aligned{m})
                                    continue
                                end
                                plot(repmat(spktms_aligned{m},2,1),[cnt cnt+1],'k');hold on;
                                for syll=1:seqlen
                                patch([seqons_a(m,syll) seqoffs_a(m,syll) seqoffs_a(m,syll) seqons_a(m,syll)]-anchorpt(m),...
                                     [cnt cnt cnt+1 cnt+1],[0.7 0.3 0.3],'edgecolor','none','facealpha',0.3);hold on;
                                end
                                cnt=cnt+1; 
                            end
                            xlim([-seqst2 seqend2]);ylim([0 cnt]);xlabel('time (ms)');ylabel('trial');
                            
                            subplot(2,1,2);hold on;
                            patch([-seqst2:seqend2 fliplr(-seqst2:seqend2)],([mean(smooth_spiketrains,1)-...
                                stderr(smooth_spiketrains,1)...
                                fliplr(mean(smooth_spiketrains,1)+...
                                stderr(smooth_spiketrains,1))])*1000,[0.5 0.5 0.5],'edgecolor','none','facealpha',0.7);
                            xlim([-seqst2 seqend2]);xlabel('time (ms)');ylabel('Hz');set(gca,'fontweight','bold');
                            plot(tb(locs),pks,'ok');hold on; 
                            plot(tb(locs(pkid(ixx))),pks(pkid(ixx)),'or');hold on;
                            yl = get(gca,'ylim');
                            plot(repmat([tb(burstst) tb(burstend)],2,1),yl,'b');hold on;
                            pause
                        end  
                    end
        end
    end
end

