%% 10/16/2012
% batch 
% at /ibis3/SY/zf1/100912_screen
dirf('*.cbin', 'batch')
findcatch('batch')
% labled only catch trials
[avnC,t,f]=get_avn('batch','c',0.2,0.2,'','','obs0'); 
[avnB,t,f]=get_avn('batch.catch','b',0.2,0.2,'','','obs0'); 


%% plot Averaged Spectogram for the syllable 
figure;imagesc(t,f,log(avnC));syn;ylim([0,1e4]);
figure;imagesc(t,f,log(avnB));syn;ylim([0,1e4]);

%for template making I plot image without t and freq axis (to find Nth slice) 
figure;imagesc(log(avnC));syn;
figure;imagesc(log(avnAB);syn;



% I choose slice to pull template from by zooming in. Each slice is 4ms w/1ms overlap 
templaC=mean(avnC(1:2:256,[79:80]),2);% [79:80], the slice of interest=the number you want to change 
templaB=mean(avnB_Sal(1:2:256,[66:67]),2);

size(templaC)
size(templaB)
%should be 128 point vector  (128 by 1)

%normalize first six values of template to 0.
templaC(1:6)=0;
templaC=templaC./max(templaC);

templaB(1:6)=0;
templaB=templaB./max(templaB);

figure; hold on; plot (templaC, 'b');plot (templaA, 'r');
%% synshift script
%used to synthetically shift templates, for purposes of maintaining hits
%during pitchshifts.
%takes 'invec' as input, returns 'outvec'  
invec = templaC

figure;plot([templaC])

%for first harmonic what are points to cut out
range=[9 11] % range of the harmonic of interest 
%(the higher the better (i.e., second harmonic is more accurate than first,
%but if the power of first harmonic is much stronger, use first one.bu17o20_091912LearningA2.m

%number of harmonics to shift (# of peaks when you plot templaA)
npeaks=10;

%positive value for upshift, negative value for downshift
shift=-1;
outvec=zeros(length(invec),1);
for ii=1:npeaks
outvecind=[ii*(range+shift)] 
invecind=[ii*range]
outvec(outvecind(1):outvecind(2))=invec(invecind(1):invecind(2))
end
templa0=outvec;

shift=1;
outvec=zeros(length(invec),1);
for ii=1:npeaks
outvecind=[ii*(range+shift)]
invecind=[ii*range]
outvec(outvecind(1):outvecind(2))=invec(invecind(1):invecind(2))
end
templa2=outvec;

figure;plot([templa0 templaC templa2])
templaAtri=[templa0 templaA templa2];
uievtafsim('batch',zf1_1016);
mk_tempf('batch.catch',templaAtri,2,'obs0');

%% THIS CODE WRITES THE TEMPLATE TO A DATA FILE

wrt_templ('zf1_1016.dat',templaC);

%% values from Stimulated syllables 

% load current template 
load zf1_1016.dat

[valsA,trigsA]=triglabel('batch.catch','a',1,1,0,0); % last 0 = not simulated

sum(valsA)
% N match   N labeling   N trigger

% Hit Rate
sum(valsA(:,1))/sum(valsA(:,2))*100 

% WN timing for triggered syllables
toffA=[];
for ii=1:length(trigsA)
	toffA=[toffA;trigsA(ii).toffset];
end

% Plot WN timing (mean+/-STD) on the syllable
figure
imagesc(t,f,log(avnA));syn;ylim([0,1e4]);
hold on
plot(mean(toffA*1e-3),2000,'k^');
plot((mean(toffA)+[-1,1]*std(toffA))*1e-3,2000*[1,1],'k-');

% Check how tight the timing of WN 
mean (toffA) % 
std (toffA)  % 
iqr (toffA)  %

%% Simulation (i.e. online calculation)
%generate X.tmp files
%   templ is the template vector, 2 is the pre time of the files
%   get the 2 from the rec file use the same # as the T Before value
mk_tempf('batch',zf1_1016,2,'obs0');

%build cntrng struct array
%cntrng(index) -> index is the template # if you have one template it's one
%		 template it only equal to one
%This is set up for case where there are three templates.

% Try one set of cntrng values.
cntrng(1).MIN=1; % min threshold
cntrng(1).MAX=2; % max threshold
cntrng(1).NOT=0; %true/false logic, true->note=0
cntrng(1).MODE=1;%evtafmode=1; birdtafmode=0;
cntrng(1).TH=2.5;%threshold
cntrng(1).AND=0; %and/or logic with other templates.
cntrng(1).BTMIN=0

cntrng(2).MIN=2;
cntrng(2).MAX=3;
cntrng(2).NOT=0;
cntrng(2).MODE=1;
cntrng(2).TH=1.5;
cntrng(2).AND=0;
cntrng(2).BTMIN=0

cntrng(3).MIN=2;
cntrng(3).MAX=3;
cntrng(3).NOT=0;
cntrng(3).MODE=1
cntrng(3).TH=1.5;
cntrng(3).AND=0;
cntrng(3).BTMIN=0

cntrng(4).MIN=1;
cntrng(4).MAX=2;
cntrng(4).NOT=0;
cntrng(4).MODE=1;
cntrng(4).TH=1;
cntrng(4).AND=0;
cntrng(4).BTMIN=0

cntrng(5).MIN=1;
cntrng(5).MAX=2;
cntrng(5).NOT=0;
cntrng(5).MODE=1;
cntrng(5).TH=1;
cntrng(5).AND=0;
cntrng(5).BTMIN=0

% B
cntrng(1).MIN=2; % min threshold
cntrng(1).MAX=3; % max threshold
cntrng(1).NOT=0; %true/false logic, true->note=0
cntrng(1).MODE=1;%evtafmode=1; birdtafmode=0;
cntrng(1).TH=2.5;%threshold
cntrng(1).AND=0; %and/or logic with other templates.
cntrng(1).BTMIN=0

cntrng(2).MIN=2;
cntrng(2).MAX=3;
cntrng(2).NOT=0;
cntrng(2).MODE=1;
cntrng(2).TH=2;
cntrng(2).AND=0;
cntrng(2).BTMIN=0

cntrng(3).MIN=2;
cntrng(3).MAX=3;
cntrng(3).NOT=0;
cntrng(3).MODE=1
cntrng(3).TH=2;
cntrng(3).AND=0;
cntrng(3).BTMIN=0
%SIMULATION OF TRIGGERING, with those cntrng values.
%example if you has a second template
%do a simulation of the counter ranges to see where it would have triggered
get_trigt2('batch',cntrng,0.2,128,1,1); %3rd value (=0.2) is for refractory period; last 1=simulation
[vals_C,trigs_C]=triglabel('batch','c',1,1,0,1);

sum(vals_C)
% N match   N labeling   N trigger

% systematic test for TH 
for TH=2:-.2:.4
	cntrng(1).TH=TH;
	get_trigt2('batch.catch',cntrng,0.506,128,1,1);
	[vals]=triglabel('batch.catch','a',1,1,0,1);
	tvals=[tvals;TH,sum(vals)];
end

figure;plot(tvals(:,1),tvals(:,2)./tvals(:,3),'bs-')

% WN timing based on all simulated syllables 
toff_A=[];
for ii=1:length(trigs_A)
	toff_A=[toff_A;trigs_A(ii).toffset];
end

% Plot WN timing based on all simulated syllables
figure
imagesc(t,f,log(avnA));syn;ylim([0,1e4]);
hold on
plot(mean(toff_A*1e-3),2000,'k^');
plot((mean(toff_A)+[-1,1]*std(toff_A))*1e-3,2000*[1,1],'k-');

% Template timing based on all simulated syllables 
mean (toff_A) % 
std (toff_A)  % 
iqr (toff_A)  % 

% Compare between triggered & simulated all syllables
figure; plot (toffA, 'ko');hold on;plot(toff_A, 'ro')
uievtafsim('batch',bu17o20tri_1007);
%% Calculating FF among labeled, triggered files
vals_A=evtaf_freq('batch.catch', [2600 4100], 'a', 128, 'obs0', 1); % last 1 means based on simulation
vals_B=evtaf_freq('batch.catch', [3000 4000], 'b', 128, 'obs0', 1); 
% this only detects triggered. so cannot use for catch during WN
% vals=evtaf_freq(bt,fbins,NT,NFFT,CS,USEX);
%
%  bt - batch filefigure; hold on; plot(mean(pc_bk27bk7_baseUD'),'k')
%  fbins - [Min Freq, Max Freq] to search for peaks (in Hz); [2000 3000],
%  lower & longer; [2800 3800], higher & shorter
%  
%  NT - target note, if you labe the syllable of interest as 'a', use 'a'
%  NFFT - length of template 
%  CS - chan spec
%  USEX - if == 1 look in X.rec for trigger times
% returns vals - 
%   vals=[datenum of file , FREQ vals , Note Index , file number]-> not for
%   this file, FREQ vals should be in 6th column.... (SY)
% usage example:
%  vals=evtaf_freq('batch.train',[5000,6000],'a',128,'obs0',0);

% in this function FFs are in the 6th column.1st function is time.

figure; hold on; plot (vals_A1002(:,2));
plot (vals_A1003WN(:,2),'r')

%% Calculating mean/std from FF population
mean (vals_A0618UD(:,2))
std (vals_A0618UD(:,2))

mean (vals_A0618FD(:,2))
std (vals_A0618FD(:,2))

%% Calculating percentile from FF population
prctile(vals_A(:,2), 25) % 
prctile(vals_A(:,2), 50) % 
prctile(vals_A(:,2), 65) % 
prctile(vals_A(:,2), 75) % 

%% Getting Pitch Contour, FF (i.e., off line FF calculation, not based on simulation)
% Pre
% A
[fvalsstrA_0801Sal]=findwnote2tw('bu17o20_01Aug2012_Sal','a','',0.506,[3100 3700],1024,0,'obs0');
[fvalsstrA_forpc_0801Sal]=findwnote2tw('bu17o20_01Aug2012_Sal','a','',-0.016,[3100 3700],8000,0,'obs0');
pcA_bu17o20_0801Sal=jc_pitchcontourFV(fvalsstrA_forpc_0801Sal,1024,1020,1,3100,3700,1,'obs0');
% B
[fvalsstrB_0801Sal]=findwnote2tw('bu17o20_01Aug2012_Sal','b','',0.506,[4800 5800],1024,0,'obs0');
[fvalsstrB_forpc_0801Sal]=findwnote2tw('bu17o20_01Aug2012_Sal','b','',-0.016,[4800 5800],8000,0,'obs0');
pcB_bu17o20_0801Sal=jc_pitchcontourFV(fvalsstrB_forpc_0801Sal,1024,1020,1,4800,5800,1,'obs0');


%% All Pitch contour

figure;
plot(pcA_bu17o20_0918WN, 'k');

%% Mean +/- Std Pitch Contour
figure, hold on, 
plot(mean(pcA_bu17o20_0918WN'), 'k', 'LineWidth', 2); 
plot(mean(pcA_bu17o20_0918WN')-std(mean(pcA_bu17o20_0918WN')), 'k'); 
plot(mean(pcA_bu17o20_0918WN')+std(mean(pcA_bu17o20_0918WN')), 'k');

%% FF scatter plot 


figure;hold on;
plot((timing4(fvalsstrA_0823SalWN)),(mean(pcA_bu17o20_0823SalWN(180:190,:))),'bo');
plot (5500, mean(mean(pcA_bu17o20_0823SalWN(180:190,:))), 'bo','LineWidth', 3);
plot (5500, mean(mean(pcA_bu17o20_0823SalWN(180:190,:)))-std(mean(pcA_bu17o20_0823SalWN(180:190,:))), 'b*');
plot (5500, mean(mean(pcA_bu17o20_0823SalWN(180:190,:)))+std(mean(pcA_bu17o20_0823SalWN(180:190,:))), 'b*');


%% Running Ave (window size=20)

figure; hold on;
plot(runningmedian(timing4(fvalsstrA_0801Sal),20),runningmedian(mean(pcA_bu17o20_0801Sal(250:300,:)),20), 'k')
plot(runningmedian(timing4(fvalsstrA_0802pre),20),runningmedian(mean(pcA_bu17o20_0802pre(250:300,:)),20), 'b')
plot(runningmedian(timing4(fvalsstrA_0802D1ant),20),runningmedian(mean(pcA_bu17o20_0802D1ant(250:300,:)),20), 'r')
plot(runningmedian(timing4(fvalsstrA_0803post),20),runningmedian(mean(pcA_bu17o20_0803post(250:300,:)),20),'b')
plot(runningmedian(timing4(fvalsstrA_0803wash),20),runningmedian(mean(pcA_bu17o20_0803wash(250:300,:)),20),'k')







